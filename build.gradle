plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
}

repositories {
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
    test {
        java {
            srcDirs = ['src']
        }
    }
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDirs = ['src']
        }
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'net.minidev:json-smart:1.2'
    implementation 'com.mchange:c3p0:0.9.5'
    implementation 'io.netty:netty-all:4.1.4.Final'
    implementation 'org.apache.derby:derby:10.11.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.14.0'
    implementation 'com.google.firebase:firebase-admin:6.8.1'
    implementation 'org.zeroturnaround:zt-zip:1.13'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.maxmind.geoip2:geoip2:2.12.0'
    implementation 'com.javadocmd:simplelatlng:1.3.1'
    implementation 'junit:junit:4.12'
    implementation 'org.hamcrest:hamcrest-all:1.3'
}

version = '1.0.08'

jar {
    manifest {
        attributes(
                'Built-By': 'V. Arun',
                'Implementation-Vendor': 'University of Massachusetts',
                'Implementation-Title': 'GigaPaxos',
                'Implementation-Version': project.version
        )
    }
}

test {
    useJUnit()

    filter {
        includeTestsMatching '*Test'
    }

    jvmArgs '-ea'
    systemProperty 'java.util.logging.config.file', 'logging.properties'
    systemProperty 'javax.net.ssl.trustStorePassword', 'qwerty'
    systemProperty 'javax.net.ssl.trustStore', 'conf/keyStore/node100.jks'
    systemProperty 'javax.net.ssl.keyStorePassword', 'qwerty'
    systemProperty 'javax.net.ssl.keyStore', 'conf/keyStore/node100.jks'
    systemProperty 'gigapaxosConfig', 'gigapaxos.properties'
    systemProperty 'testingConfig', 'conf/debugTesting.properties'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
}

